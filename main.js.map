{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/iout/iout.component.css","webpack:///./src/app/iout/iout.component.html","webpack:///./src/app/iout/iout.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fib3V0L2Fib3V0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  about works!\\n</p>\\n\\n\\nwelcome to navigation\\n\\n\\n \\n    \\n        \\n              \\n              <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"firstName\\\">First Name</label>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"model.firstName\\\" #firstName=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && firstName.invalid }\\\" required />\\n                      <div *ngIf=\\\"f.submitted && firstName.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <div *ngIf=\\\"firstName.errors.required\\\">First Name is required</div>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"lastName\\\">Last Name</label>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"model.lastName\\\" #lastName=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && lastName.invalid }\\\" required />\\n                      <div *ngIf=\\\"f.submitted && lastName.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <div *ngIf=\\\"lastName.errors.required\\\">Last Name is required</div>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"email\\\">Email</label>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"model.email\\\" #email=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && email.invalid }\\\" required email />\\n                      <div *ngIf=\\\"f.submitted && email.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <div *ngIf=\\\"email.errors.required\\\">Email is required</div>\\n                          <div *ngIf=\\\"email.errors.email\\\">Email must be a valid email address</div>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"password\\\">Password</label>\\n                      <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && password.invalid }\\\" required minlength=\\\"6\\\" />\\n                      <div *ngIf=\\\"f.submitted && password.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <div *ngIf=\\\"password.errors.required\\\">Password is required</div>\\n                          <div *ngIf=\\\"password.errors.minlength\\\">Password must be at least 6 characters</div>\\n                      </div>\\n                  </div>\\n                  \\n                      <button class=\\\"btn btn-primary\\\">Register</button>\\n      </form>\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  exampleForm = new FormGroup ({\n    firstName: new FormControl(),\n    lastName: new FormControl(),\n\n  });\n\n\n  model: any = {};\n\n  onSubmit() {\n    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.model))\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AboutComponent } from './about/about.component';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n{\n  path: '',\n  component: HomeComponent\n},\n{\n  path: 'about',\n  component: AboutComponent\n}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".display\\r\\n{\\r\\n\\r\\n\\r\\n    border:1px solid red;\\r\\n    float:right;\\r\\n    width:500px;\\r\\n    height:700px;\\r\\n}\\r\\n\\r\\n.mat-radio-button ~ .mat-radio-button {\\r\\n    margin-left: 16px;\\r\\n  }\\r\\n\\r\\n.example-box\\r\\n  {\\r\\n      width:200px;\\r\\n      height: 200px;\\r\\n      background-origin: padding-box;\\r\\n\\r\\n      border-radius: 5em;\\r\\n      border:1px solid red;\\r\\n      text-align: center;\\r\\n      padding: 50px;\\r\\n\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7SUFJSSxvQkFBb0I7SUFDcEIsV0FBVztJQUNYLFdBQVc7SUFDWCxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksaUJBQWlCO0VBQ25COztBQUVBOztNQUVJLFdBQVc7TUFDWCxhQUFhO01BQ2IsOEJBQThCOztNQUU5QixrQkFBa0I7TUFDbEIsb0JBQW9CO01BQ3BCLGtCQUFrQjtNQUNsQixhQUFhOztFQUVqQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRpc3BsYXlcclxue1xyXG5cclxuXHJcbiAgICBib3JkZXI6MXB4IHNvbGlkIHJlZDtcclxuICAgIGZsb2F0OnJpZ2h0O1xyXG4gICAgd2lkdGg6NTAwcHg7XHJcbiAgICBoZWlnaHQ6NzAwcHg7XHJcbn1cclxuXHJcbi5tYXQtcmFkaW8tYnV0dG9uIH4gLm1hdC1yYWRpby1idXR0b24ge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDE2cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5leGFtcGxlLWJveFxyXG4gIHtcclxuICAgICAgd2lkdGg6MjAwcHg7XHJcbiAgICAgIGhlaWdodDogMjAwcHg7XHJcbiAgICAgIGJhY2tncm91bmQtb3JpZ2luOiBwYWRkaW5nLWJveDtcclxuXHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDVlbTtcclxuICAgICAgYm9yZGVyOjFweCBzb2xpZCByZWQ7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgcGFkZGluZzogNTBweDtcclxuXHJcbiAgfSJdfQ== */\"","module.exports = \"<ul>\\n  <li><a routerLink=\\\"\\\">Home</a></li>\\n  <li><a routerLink=\\\"about\\\">About</a></li>\\n</ul>\\n\\n\\n<div class=\\\"display\\\">\\n\\n  <router-outlet></router-outlet>\\n\\n</div>\\n<button mat-button>Click me!</button>\\n<mat-checkbox>Check me!</mat-checkbox>\\n\\n<button mat-button [matMenuTriggerFor]=\\\"menu\\\">Menu</button>\\n<mat-menu #menu=\\\"matMenu\\\">\\n  <button mat-menu-item>Item 1</button>\\n  <button mat-menu-item>Item 2</button>\\n</mat-menu>\\n\\n<mat-menu #rootMenu=\\\"matMenu\\\">\\n  <button mat-menu-item [matMenuTriggerFor]=\\\"subMenu\\\">Power</button>\\n  <button mat-menu-item>System settings</button>\\n</mat-menu>\\n\\n\\n<mat-tab-group>\\n  <mat-tab label=\\\"First\\\"> Content 1 </mat-tab>\\n  <mat-tab label=\\\"Second\\\"> Content 2 </mat-tab>\\n  <mat-tab label=\\\"Third\\\"> Content 3 </mat-tab>\\n</mat-tab-group>\\n\\n<mat-chip-list>\\n  <mat-chip>Papadum</mat-chip>\\n  <mat-chip>Naan</mat-chip>\\n  <mat-chip>Dal</mat-chip>\\n</mat-chip-list>\\n\\n<mat-radio-group aria-label=\\\"Select an option\\\">\\n  <mat-radio-button value=\\\"1\\\">Option 1</mat-radio-button>\\n  <mat-radio-button value=\\\"2\\\">Option 2</mat-radio-button>\\n</mat-radio-group>\\n\\n<div style=\\\"text-align:left;width:500px;\\\">\\n  <h1>\\n      {{ title }}!\\n  </h1>\\n\\n  <table *ngIf=\\\"arrBirds\\\">\\n      <!-- ADD HEADERS -->\\n      <tr>\\n          <th>ID</th>\\n              <th>Name of Bird</th>\\n                  <th>Type of Bird</th>\\n      </tr>\\n\\n      <!-- BIND ARRAY TO TABLE -->\\n      <tr *ngFor=\\\"let bird of arrBirds\\\">\\n          <td>{{bird.id}}</td>\\n              <td>{{bird.name}}</td>\\n                  <td>{{bird.email}}</td>\\n      </tr>\\n  </table>\\n</div>\\n\\n\\n<div class=\\\"example-box\\\" cdkDrag>\\n  Drag me around\\n</div>\"","import { Component } from '@angular/core';\n\n\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\n\nexport class AppComponent {\n  title = 'JSON to Table Example';\n  constructor (private httpService: HttpClient) { }\n  arrBirds: string [];\n\n  ngOnInit () {\n    this.httpService.get('http://jsonplaceholder.typicode.com/users').subscribe(\n      data => {\n        this.arrBirds = data as string [];\t // FILL THE ARRAY WITH DATA.\n        console.log(this.arrBirds[1]);\n      }\n    );\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AboutComponent } from './about/about.component';\nimport { HomeComponent } from './home/home.component';\n//import { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatMenuModule} from '@angular/material/menu';\n\nimport {MatTabsModule} from '@angular/material/tabs';\n\nimport { FormsModule } from '@angular/forms';\n\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IoutComponent } from './iout/iout.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    AboutComponent,\n    HomeComponent,\n    IoutComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    NoopAnimationsModule,\n    MatButtonModule, \n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatMenuModule,\n    MatTabsModule,\n    MatChipsModule,\n    MatRadioModule,\n    DragDropModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  home works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2lvdXQvaW91dC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  iout works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-iout',\n  templateUrl: './iout.component.html',\n  styleUrls: ['./iout.component.css']\n})\nexport class IoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}